|Lab5
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw0 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw1 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw2 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw3 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw4 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw5 => stack.DATAB
sw6 => always0.IN0
sw6 => always0.IN0
sw7 => always0.IN1
sw7 => always0.IN1
seg0[0] <= B2D:comb_2212.port1
seg0[1] <= B2D:comb_2212.port1
seg0[2] <= B2D:comb_2212.port1
seg0[3] <= B2D:comb_2212.port1
seg0[4] <= B2D:comb_2212.port1
seg0[5] <= B2D:comb_2212.port1
seg0[6] <= B2D:comb_2212.port1
seg1[0] <= B2D:comb_2213.port1
seg1[1] <= B2D:comb_2213.port1
seg1[2] <= B2D:comb_2213.port1
seg1[3] <= B2D:comb_2213.port1
seg1[4] <= B2D:comb_2213.port1
seg1[5] <= B2D:comb_2213.port1
seg1[6] <= B2D:comb_2213.port1
rst => tmp[0].ACLR
rst => tmp[1].ACLR
rst => tmp[2].ACLR
rst => tmp[3].ACLR
rst => tmp[4].ACLR
rst => tmp[5].ACLR
rst => tmp[6].ACLR
rst => index[0].PRESET
rst => index[1].PRESET
rst => index[2].PRESET
rst => index[3].PRESET
rst => index[4].PRESET
rst => index[5].PRESET
rst => index[6].PRESET
rst => index[7].PRESET
rst => index[8].PRESET
rst => index[9].PRESET
rst => index[10].PRESET
rst => index[11].PRESET
rst => index[12].PRESET
rst => index[13].PRESET
rst => index[14].PRESET
rst => index[15].PRESET
rst => index[16].PRESET
rst => index[17].PRESET
rst => index[18].PRESET
rst => index[19].PRESET
rst => index[20].PRESET
rst => index[21].PRESET
rst => index[22].PRESET
rst => index[23].PRESET
rst => index[24].PRESET
rst => index[25].PRESET
rst => index[26].PRESET
rst => index[27].PRESET
rst => index[28].PRESET
rst => index[29].PRESET
rst => index[30].PRESET
rst => index[31].PRESET
rst => stack[0][0].ACLR
rst => stack[0][1].ACLR
rst => stack[0][2].ACLR
rst => stack[0][3].ACLR
rst => stack[0][4].ACLR
rst => stack[0][5].ACLR
rst => stack[1][0].ACLR
rst => stack[1][1].ACLR
rst => stack[1][2].ACLR
rst => stack[1][3].ACLR
rst => stack[1][4].ACLR
rst => stack[1][5].ACLR
rst => stack[2][0].ACLR
rst => stack[2][1].ACLR
rst => stack[2][2].ACLR
rst => stack[2][3].ACLR
rst => stack[2][4].ACLR
rst => stack[2][5].ACLR
rst => stack[3][0].ACLR
rst => stack[3][1].ACLR
rst => stack[3][2].ACLR
rst => stack[3][3].ACLR
rst => stack[3][4].ACLR
rst => stack[3][5].ACLR
rst => stack[4][0].ACLR
rst => stack[4][1].ACLR
rst => stack[4][2].ACLR
rst => stack[4][3].ACLR
rst => stack[4][4].ACLR
rst => stack[4][5].ACLR
rst => stack[5][0].ACLR
rst => stack[5][1].ACLR
rst => stack[5][2].ACLR
rst => stack[5][3].ACLR
rst => stack[5][4].ACLR
rst => stack[5][5].ACLR
rst => stack[6][0].ACLR
rst => stack[6][1].ACLR
rst => stack[6][2].ACLR
rst => stack[6][3].ACLR
rst => stack[6][4].ACLR
rst => stack[6][5].ACLR
rst => stack[7][0].ACLR
rst => stack[7][1].ACLR
rst => stack[7][2].ACLR
rst => stack[7][3].ACLR
rst => stack[7][4].ACLR
rst => stack[7][5].ACLR
rst => stack[8][0].ACLR
rst => stack[8][1].ACLR
rst => stack[8][2].ACLR
rst => stack[8][3].ACLR
rst => stack[8][4].ACLR
rst => stack[8][5].ACLR
rst => stack[9][0].ACLR
rst => stack[9][1].ACLR
rst => stack[9][2].ACLR
rst => stack[9][3].ACLR
rst => stack[9][4].ACLR
rst => stack[9][5].ACLR
rst => stack[10][0].ACLR
rst => stack[10][1].ACLR
rst => stack[10][2].ACLR
rst => stack[10][3].ACLR
rst => stack[10][4].ACLR
rst => stack[10][5].ACLR
rst => stack[11][0].ACLR
rst => stack[11][1].ACLR
rst => stack[11][2].ACLR
rst => stack[11][3].ACLR
rst => stack[11][4].ACLR
rst => stack[11][5].ACLR
rst => stack[12][0].ACLR
rst => stack[12][1].ACLR
rst => stack[12][2].ACLR
rst => stack[12][3].ACLR
rst => stack[12][4].ACLR
rst => stack[12][5].ACLR
rst => stack[13][0].ACLR
rst => stack[13][1].ACLR
rst => stack[13][2].ACLR
rst => stack[13][3].ACLR
rst => stack[13][4].ACLR
rst => stack[13][5].ACLR
rst => stack[14][0].ACLR
rst => stack[14][1].ACLR
rst => stack[14][2].ACLR
rst => stack[14][3].ACLR
rst => stack[14][4].ACLR
rst => stack[14][5].ACLR
rst => stack[15][5].ENA
rst => stack[15][4].ENA
rst => stack[15][3].ENA
rst => stack[15][2].ENA
rst => stack[15][1].ENA
rst => stack[15][0].ENA
do_op => tmp[0].CLK
do_op => tmp[1].CLK
do_op => tmp[2].CLK
do_op => tmp[3].CLK
do_op => tmp[4].CLK
do_op => tmp[5].CLK
do_op => tmp[6].CLK
do_op => index[0].CLK
do_op => index[1].CLK
do_op => index[2].CLK
do_op => index[3].CLK
do_op => index[4].CLK
do_op => index[5].CLK
do_op => index[6].CLK
do_op => index[7].CLK
do_op => index[8].CLK
do_op => index[9].CLK
do_op => index[10].CLK
do_op => index[11].CLK
do_op => index[12].CLK
do_op => index[13].CLK
do_op => index[14].CLK
do_op => index[15].CLK
do_op => index[16].CLK
do_op => index[17].CLK
do_op => index[18].CLK
do_op => index[19].CLK
do_op => index[20].CLK
do_op => index[21].CLK
do_op => index[22].CLK
do_op => index[23].CLK
do_op => index[24].CLK
do_op => index[25].CLK
do_op => index[26].CLK
do_op => index[27].CLK
do_op => index[28].CLK
do_op => index[29].CLK
do_op => index[30].CLK
do_op => index[31].CLK
do_op => stack[0][0].CLK
do_op => stack[0][1].CLK
do_op => stack[0][2].CLK
do_op => stack[0][3].CLK
do_op => stack[0][4].CLK
do_op => stack[0][5].CLK
do_op => stack[1][0].CLK
do_op => stack[1][1].CLK
do_op => stack[1][2].CLK
do_op => stack[1][3].CLK
do_op => stack[1][4].CLK
do_op => stack[1][5].CLK
do_op => stack[2][0].CLK
do_op => stack[2][1].CLK
do_op => stack[2][2].CLK
do_op => stack[2][3].CLK
do_op => stack[2][4].CLK
do_op => stack[2][5].CLK
do_op => stack[3][0].CLK
do_op => stack[3][1].CLK
do_op => stack[3][2].CLK
do_op => stack[3][3].CLK
do_op => stack[3][4].CLK
do_op => stack[3][5].CLK
do_op => stack[4][0].CLK
do_op => stack[4][1].CLK
do_op => stack[4][2].CLK
do_op => stack[4][3].CLK
do_op => stack[4][4].CLK
do_op => stack[4][5].CLK
do_op => stack[5][0].CLK
do_op => stack[5][1].CLK
do_op => stack[5][2].CLK
do_op => stack[5][3].CLK
do_op => stack[5][4].CLK
do_op => stack[5][5].CLK
do_op => stack[6][0].CLK
do_op => stack[6][1].CLK
do_op => stack[6][2].CLK
do_op => stack[6][3].CLK
do_op => stack[6][4].CLK
do_op => stack[6][5].CLK
do_op => stack[7][0].CLK
do_op => stack[7][1].CLK
do_op => stack[7][2].CLK
do_op => stack[7][3].CLK
do_op => stack[7][4].CLK
do_op => stack[7][5].CLK
do_op => stack[8][0].CLK
do_op => stack[8][1].CLK
do_op => stack[8][2].CLK
do_op => stack[8][3].CLK
do_op => stack[8][4].CLK
do_op => stack[8][5].CLK
do_op => stack[9][0].CLK
do_op => stack[9][1].CLK
do_op => stack[9][2].CLK
do_op => stack[9][3].CLK
do_op => stack[9][4].CLK
do_op => stack[9][5].CLK
do_op => stack[10][0].CLK
do_op => stack[10][1].CLK
do_op => stack[10][2].CLK
do_op => stack[10][3].CLK
do_op => stack[10][4].CLK
do_op => stack[10][5].CLK
do_op => stack[11][0].CLK
do_op => stack[11][1].CLK
do_op => stack[11][2].CLK
do_op => stack[11][3].CLK
do_op => stack[11][4].CLK
do_op => stack[11][5].CLK
do_op => stack[12][0].CLK
do_op => stack[12][1].CLK
do_op => stack[12][2].CLK
do_op => stack[12][3].CLK
do_op => stack[12][4].CLK
do_op => stack[12][5].CLK
do_op => stack[13][0].CLK
do_op => stack[13][1].CLK
do_op => stack[13][2].CLK
do_op => stack[13][3].CLK
do_op => stack[13][4].CLK
do_op => stack[13][5].CLK
do_op => stack[14][0].CLK
do_op => stack[14][1].CLK
do_op => stack[14][2].CLK
do_op => stack[14][3].CLK
do_op => stack[14][4].CLK
do_op => stack[14][5].CLK
do_op => stack[15][0].CLK
do_op => stack[15][1].CLK
do_op => stack[15][2].CLK
do_op => stack[15][3].CLK
do_op => stack[15][4].CLK
do_op => stack[15][5].CLK


|Lab5|B2D:comb_2212
inputBus[0] => Decoder0.IN4
inputBus[1] => Decoder0.IN3
inputBus[2] => Decoder0.IN2
inputBus[3] => Decoder0.IN1
inputBus[4] => Decoder0.IN0
outputBus[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
outputBus[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
outputBus[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
outputBus[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
outputBus[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
outputBus[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
outputBus[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Lab5|B2D:comb_2213
inputBus[0] => Decoder0.IN4
inputBus[1] => Decoder0.IN3
inputBus[2] => Decoder0.IN2
inputBus[3] => Decoder0.IN1
inputBus[4] => Decoder0.IN0
outputBus[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
outputBus[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
outputBus[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
outputBus[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
outputBus[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
outputBus[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
outputBus[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


